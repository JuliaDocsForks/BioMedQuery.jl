{
  "name": "Nlm.jl",
  "tagline": "Utilities for interacting with different databases provided by the National Library of Medicine (NLM)",
  "body": "<!--\r\n@Author: isa\r\n@Date:   2016-05-13T16:37:00-04:00\r\n@Last modified by:   isa\r\n@Last modified time: 2016-05-19T16:12:10-04:00\r\n-->\r\n\r\n\r\n\r\n# NLM\r\n## Utilities to interact with databases/APIs provided by the National Library of Medicine (NLM)\r\n[![Build Status](https://travis-ci.org/bcbi/NLM.jl.svg?branch=master)](https://travis-ci.org/bcbi/NLM.jl)\r\nSupported databases/APIS include:\r\n\r\n- [Entrez Programming Utilities (E-utilities)](#entrez)\r\n- [Unified Medical Language System (UMLS)](#umls)\r\n- [Clinical Trials](#clinical-trials)\r\n\r\n### Installation\r\n```{Julia}\r\nPkg.clone(\"https://github.com/bcbi/NLM.jl.git\")\r\n```\r\n-------------------------\r\n\r\n###Entrez\r\n\r\nAPI details at  http://www.ncbi.nlm.nih.gov/books/NBK25501/\r\n\r\n#### ESearch\r\n- Formulate a dictionary to search PubMed for 100 articles between 2000 and 2012\r\nwith obesity indicated as the major MeSH descriptor.\r\n\r\n\r\n ```{Julia}\r\n search_dic = Dict(\"db\"=>\"pubmed\",\"term\" => \"obesity\",\r\n  \"retstart\" => 0, \"retmax\"=>100, \"tool\" =>\"BioJulia\",\r\n  \"email\" => email, \"mindate\"=>\"2000\",\"maxdate\"=>\"2012\" )\r\n  ```\r\n\r\n- Use esearch\r\n\r\n ```{Julia}\r\n esearch_response = esearch(search_dic)\r\n ```\r\n\r\n- Convert response-xml to dictionary\r\n\r\n ```{Julia}\r\n esearch_dict = eparse(esearch_response)\r\n ```\r\n \r\n#### EFetch\r\n- Retrieve the list of ID's returned by esearch\r\n    \r\n ```{Julia}\r\n  if !haskey(esearch_dict, \"IdList\")\r\n      error(\"Error: IdList not found\")\r\n  end\r\n  \r\n  ids = []\r\n  for id_node in esearch_dict[\"IdList\"][1][\"Id\"]\r\n      push!(ids, id_node)\r\n  end\r\n  ```\r\n\r\n- Define the fetch dictionary\r\n\r\n ```{Julia}\r\n fetch_dic = Dict(\"db\"=>\"pubmed\",\"tool\" =>\"BioJulia\", \"email\" => email, \"retmode\" => \"xml\", \"rettype\"=>\"null\")\r\n efetch_response = efetch(fetch_dic, ids)\r\n ```\r\n\r\n- Convert response-xml to dictionary\r\n\r\n ```{Julia}\r\n efetch_dict = eparse(efetch_response)\r\n ```\r\n\r\n- Optional - save the results of an entrez fetch to a sqlite database\r\n\r\n ```{Julia}\r\n db = save_efetch(efetch_dict, db_path)\r\n ```\r\n-------------------------\r\n\r\n###UMLS\r\nSearch Unified Medical Language System. For more details on the REST API see https://documentation.uts.nlm.nih.gov/rest/home.html\r\n\r\n####Import\r\n```{Julia}\r\nusing NLM.UMLS\r\n```\r\n\r\n#### Search by term\r\n\r\nSearch UMLS using the Rest API. The user needs approved credentials and a query dictionary.\r\nTo sign up for credentials see https://uts.nlm.nih.gov//license.html\r\n\r\n- To create credentials\r\n\r\n ```{Julia}\r\n import NLM.UMLS:Credentials\r\n credentials = Credentials(user, psswd)\r\n ```\r\n\r\n- To compose the query\r\n\r\n ```{Julia}\r\n query = Dict(\"string\"=>term, \"searchType\"=>\"exact\" )\r\n ```\r\n\r\n- To search all concepts associeted with the indicated term\r\n\r\n ```{Julia}\r\n all_results= search_umls(credentials, query)\r\n ```\r\n\r\n#### Get best CUI\r\n\r\n- To retrive the CUI for the rest match\r\n\r\n ```{Julia}\r\n cui = best_match_cui(all_results, term)\r\n```\r\n#### Get UMLS concepts associated with a CUI\r\n\r\n```{Julia}\r\nall_concepts = get_concepts(c, cui)\r\n```\r\n-------------------------\r\n\r\n###Clinical Trials\r\n\r\nSubmit and save queries to  https://clinicaltrials.gov/\r\n\r\n#### Importing\r\n```{Julia}\r\nusing NLM.CT\r\n```\r\n\r\n#### Search and save\r\n\r\n- Create a query, for instance:\r\n\r\n```{Julia}\r\nquery = Dict(\"term\" => \"acne\", \"age\"=>Int(CT.child), \"locn\" => \"New York, NY\")\r\n```\r\nNote: The term can also indicate joint searches, e.g.\r\n\r\n```{Julia}\r\n\"term\" => \"aspirin OR ibuprofen\"\r\n```\r\n- Submit query and save to a specified location\r\n\r\n ```{Julia}\r\n fout= \"./test_CT_search.zip\"\r\n status = NLM.CT.search_ct(query, fout;)\r\n ```\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}