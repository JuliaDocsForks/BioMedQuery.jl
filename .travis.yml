language: julia
julia:
  - 0.6
os:
  - linux
  - osx
env:
  - GROUP=Test
  - GROUP=Examples
matrix:
  exclude:
    - os: osx
      env: GROUP=Examples
notifications:
  email: true
before_script:
  - echo "[mysqld]" > $HOME/.my.cnf
  - echo "secure_file_priv = \"\" ">> $HOME/.my.cnf
  - echo "default_authentication_plugin = mysql_native_password" >> $HOME/.my.cnf
  - echo "local_infile = 1" >> $HOME/.my.cnf
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then . ./ci/travis/before_install-osx.sh; fi
  - export OLD_PATH=$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`mariadb_config --libs | cut -d ' ' -f1 | sed 's/-L//'`
  # - mysql -e 'CREATE DATABASE myapp_test;'
after_script:
  - export LD_LIBRARY_PATH=$OLD_PATH
  - unset OLD_PATH
script:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  # - julia -e 'Pkg.clone(pwd(), "BioMedQuery"); Pkg.build("BioMedQuery"); ENV["TRAVIS"] = "yes"; Pkg.test("BioMedQuery"; coverage=true)'
  - julia --check-bounds=yes -e 'Pkg.update();
          Pkg.clone(pwd(), "BioMedQuery");
          Pkg.build("BioMedQuery");
          if ENV["GROUP"] == "Test"
            Pkg.test("BioMedQuery"; coverage=true)
          elseif ENV["GROUP"] == "Examples"
            include(Pkg.dir("BioMedQuery")*"/examples/runexamples.jl")
          else
                println("Unknown test command.")
          end'
after_success:
  - julia -e 'cd(Pkg.dir("BioMedQuery")); Pkg.add("Documenter"); Pkg.add("Literate"); include(joinpath("docs", "make.jl"))'
  - julia -e 'cd(Pkg.dir("BioMedQuery")); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
