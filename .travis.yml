language: julia
julia:
  - 0.7
os:
  - linux
  - osx
# env:
#   - GROUP=Test
#   - GROUP=Examples
notifications:
  email: true
before_script:
  - echo "[mysqld]" > $HOME/.my.cnf
  - echo "secure_file_priv = \"\" ">> $HOME/.my.cnf
  - echo "default_authentication_plugin = mysql_native_password" >> $HOME/.my.cnf
  - echo "local_infile = 1" >> $HOME/.my.cnf
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then . ./ci/travis/before_install-osx.sh; fi
  - export OLD_PATH=$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`mariadb_config --libs | cut -d ' ' -f1 | sed 's/-L//'`
  # - mysql -e 'CREATE DATABASE myapp_test;'
after_script:
  - export LD_LIBRARY_PATH=$OLD_PATH
  - unset OLD_PATH
after_success:
  - julia -e 'import Pkg; Pkg.instantiate(); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'

jobs:
  include:
    - stage: test
      script:
        - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
        - julia --check-bounds=yes -e 'import Pkg;
              Pkg.build();
              Pkg.test("BioMedQuery"; coverage=true);'
    - stage: examples
      os: linux
      script:
        - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
        - julia --check-bounds=yes -e 'import Pkg;
            include(joinpath(@__DIR__,"examples","runexamples.jl"))'
    - stage: deploy docs
      language: julia
      os: linux
      script:
        - julia -e 'import Pkg; Pkg.instantiate(); Pkg.add("Documenter"); Pkg.add("Literate"); include(joinpath("docs", "make.jl"))'
